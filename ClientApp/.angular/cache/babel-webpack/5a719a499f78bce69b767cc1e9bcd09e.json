{"ast":null,"code":"import { Subject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./environment-url.service\";\nimport * as i3 from \"@auth0/angular-jwt\";\nexport let AuthenticationService = /*#__PURE__*/(() => {\n  class AuthenticationService {\n    constructor(http, envUrl, jwtHelper) {\n      this.http = http;\n      this.envUrl = envUrl;\n      this.jwtHelper = jwtHelper;\n      this.authChangeSub = new Subject();\n      this.authChanged = this.authChangeSub.asObservable(); // Send the POST request to the Web API\n\n      this.registerUser = (route, body) => {\n        return this.http.post(this.createCompleteRoute(route, this.envUrl.urlAddress), body);\n      }; // Create a complete route from the API’s root address and the endpoint part\n\n\n      this.createCompleteRoute = (route, envAddress) => {\n        return `${envAddress}/${route}`;\n      };\n\n      this.loginUser = (route, body) => {\n        return this.http.post(this.createCompleteRoute(route, this.envUrl.urlAddress), body);\n      };\n\n      this.sendAuthStateChangeNotification = isAuthenticated => {\n        this.authChangeSub.next(isAuthenticated);\n      };\n\n      this.logout = () => {\n        localStorage.removeItem(\"token\");\n        this.sendAuthStateChangeNotification(false);\n      };\n\n      this.isUserAuthenticated = () => {\n        const token = localStorage.getItem(\"token\");\n        return token && !this.jwtHelper.isTokenExpired(token);\n      };\n    }\n\n  }\n\n  AuthenticationService.ɵfac = function AuthenticationService_Factory(t) {\n    return new (t || AuthenticationService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.EnvironmentUrlService), i0.ɵɵinject(i3.JwtHelperService));\n  };\n\n  AuthenticationService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthenticationService,\n    factory: AuthenticationService.ɵfac,\n    providedIn: 'root'\n  });\n  return AuthenticationService;\n})();","map":null,"metadata":{},"sourceType":"module"}